install.packages("devtools")
usethis::edit_r_environ()
usethis::git_sitrep()
usethis::git_sitrep()
gitcreds::gitcreds_set()
usethis::edit_r_environ()
devtools::install_github("ready4-dev/ready4")
devtools::install_github("ready4-dev/ready4show")
devtools::install_github("ready4-dev/ready4use")
devtools::install_github("ready4-dev/ready4fun")
devtools::install_github("ready4-dev/ready4class")
devtools::install_github("ready4-dev/ready4pack")
devtools::install_github("ready4-dev/youthvars")
devtools::install_github("ready4-dev/scorz")
devtools::install_github("ready4-dev/specific")
devtools::install_github("ready4-dev/heterodox")
devtools::install_github("ready4-dev/TTU")
devtools::install_github("ready4-dev/youthu")
usethis::edit_r_environ()
usethis::create_github_token()
gitcreds::gitcreds_set()
devtools::install_github("ready4-dev/youthu")
gitcreds::gitcreds_set()
usethis::edit_r_environ()
usethis::browse_github_pat()
usethis::edit_r_environ()
devtools::install_github("ready4-dev/youthu")
devtools::install_github("ready4-dev/specific")
devtools::install_github("ready4-dev/ready4")
devtools::install_github("ready4-dev/ready4fun")
devtools::install_github("ready4-dev/ready4fun") #
devtools::install_github("ready4-dev/ready4fun")
?utils::globalVariables
getwd()
getwd()
setwd("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/r4dev")
getwd()
?installed.packages
blogdown::install_hugo(extended = T)
blogdown::check_site()
blogdown::config_Rprofile()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::check_site()
blogdown::check_site()
??blogdown::build_site
blogdown::build_site(run_hugo = F, build_rmd =T)
vignette("ready4")
vignette(package = "ready4")
install.packages("blogdown")
install.packages("blogdown")
remotes::install_version("rlang", "1.0.2")
blogdown::install_hugo()
blogdown::serve_site()
blogdown::serve_site()
options(blogdown.server.timeout = 600)
blogdown::serve_site()
lsf.str("package:ready4")
library(ready4)
lsf.str("package:ready4")
blogdown::stop_server()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_start()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
install.packages("tidyRSS")
tidyRSS::tidyfeed("https://github.com/ready4-dev/ready4/releases.atom")
tidyRSS::tidyfeed("https://github.com/ready4-dev/ready4/releases.atom") -> releases_tb
View(releases_tb)
releases_tb$entry_content
releases_tb$entry_link
remotes::install_github("eblondel/zen4R")
releases_tb$entry_last_updated
releases_tb$entry_last_updated %>% sort()
releases_tb <- c("ready4","ready4fun","ready4class","ready4pack","ready4use","ready4show") %>%
purrr::map_dfr(~tidyRSS::tidyfeed(paste0("https://github.com/ready4-dev/",.x,"/releases.atom"))) %>%
dplyr::arrange(entry_last_updated)
library(magrittr)
library(tidyRSS)
releases_tb <- c("ready4","ready4fun","ready4class","ready4pack","ready4use","ready4show") %>%
purrr::map_dfr(~tidyRSS::tidyfeed(paste0("https://github.com/ready4-dev/",.x,"/releases.atom"))) %>%
dplyr::arrange(entry_last_updated)
releases_tb
releases_tb %>% dplyr::arrange(dplyr::desc(entry_last_updated))
View(releases_tb)
releases_tb$entry_link
releases_tb %>%
dplyr::select(feed_title,entry_last_updated, entry_content, entry_link)
releases_tb %>%
dplyr::select(feed_title,entry_last_updated, entry_content, entry_link) %>%
dplyr::mutate(feed_title = feed_title %>% stringr::str_remove_all("Release notes_from"))
releases_tb %>%
dplyr::select(feed_title,entry_last_updated, entry_content, entry_link) %>%
dplyr::mutate(feed_title = feed_title %>% stringr::str_remove_all("Release notes from "))
releases_tb$entry_title
releases_tb %>%
dplyr::select(feed_title, entry_title, entry_last_updated, entry_content, entry_link) %>%
dplyr::mutate(feed_title = feed_title %>% stringr::str_remove_all("Release notes from ")) %>%
dplyr::rename(Package = feed_title,
Release = entry_title,
Date = entry_last_updated,
Description = entry_content,
URL = entry_link
)
releases_tb %>%
dplyr::select(feed_title, entry_title, entry_last_updated, entry_content, entry_link) %>%
dplyr::mutate(feed_title = feed_title %>% stringr::str_remove_all("Release notes from ")) %>%
dplyr::rename(Package = feed_title,
Release = entry_title,
Date = entry_last_updated,
Description = entry_content,
URL = entry_link
) %>%
kableExtra::kbl()
releases_tb %>%
dplyr::select(feed_title, entry_title, entry_last_updated, entry_content, entry_link) %>%
dplyr::mutate(feed_title = feed_title %>% stringr::str_remove_all("Release notes from ")) %>%
dplyr::rename(Package = feed_title,
Release = entry_title,
Date = entry_last_updated,
Description = entry_content,
URL = entry_link
) %>%
kableExtra::kbl() %>%
kableExtra::kable_styling()
make_release_ds <- function(repositories_chr,
repository_type_1L_chr = "Package",
as_kable_1L_lgl = T){
releases_xx <- repositories_chr %>%
purrr::map_dfr(~tidyRSS::tidyfeed(paste0("https://github.com/ready4-dev/",.x,"/releases.atom"))) %>%
dplyr::arrange(dplyr::desc(entry_last_updated)) %>%
dplyr::select(feed_title, entry_title, entry_last_updated, entry_content, entry_link) %>%
dplyr::mutate(feed_title = feed_title %>% stringr::str_remove_all("Release notes from ")) %>%
dplyr::rename(!!rlang::sym(repository_type_1L_chr) := feed_title,
Release = entry_title,
Date = entry_last_updated,
Description = entry_content,
URL = entry_link
)
if(as_kable_1L_lgl){
releases_xx <- releases_xx %>%
kableExtra::kbl() %>%
kableExtra::kable_styling()
}
return(releases_xx)
}
install.packages('natmanager')
natmanager::list_repo("ready4-dev")
make_release_ds <- function(brochure_repos_chr = character(0),
exclude_chr = character(0),
framework_repos_chr = character(0),
model_repos_chr = character(0),
program_repos_chr = character(0),
organisation_1L_chr = "ready4-dev",
repositories_chr = character(0),
repository_type_1L_chr = "Framework",
as_kable_1L_lgl = T){
if(identical(brochure_repos_chr,character(0))){
brochure_repos_chr <- "ready4web"
}
if(identical(exclude_chr,character(0))){
exclude_chr <- "rebuild"
}
if(identical(framework_repos_chr,character(0))){
framework_repos_chr <- c("ready4","ready4fun","ready4class","ready4pack","ready4use","ready4show")
}
if(identical(model_repos_chr,character(0))){
model_repos_chr <- c("youthvars","scorz","specific","TTU","youthu","mychoice","heterodox", "bimp")
}
if(identical(program_repos_chr,character(0))){
program_repos_chr <- setdiff(natmanager::list_repo(organisation_1L_chr),
c(brochure_repos_chr, exclude_chr, framework_repos_chr, model_repos_chr))
}
if(identical(repositories_chr,character(0))){
if(repository_type_1L_chr == "Framework"){
repositories_chr <- framework_repos_chr
}
if(repository_type_1L_chr == "Module"){
repositories_chr <- model_repos_chr
}
if(repository_type_1L_chr == "Program"){
repositories_chr <- program_repos_chr
}else{
repository_type_1L_chr <- "Package"
}
}
releases_xx <- repositories_chr %>%
purrr::map_dfr(~tidyRSS::tidyfeed(paste0("https://github.com/",organisation_1L_chr,"/",.x,"/releases.atom"))) %>%
dplyr::arrange(dplyr::desc(entry_last_updated)) %>%
dplyr::select(feed_title, entry_title, entry_last_updated, entry_content, entry_link) %>%
dplyr::mutate(feed_title = feed_title %>% stringr::str_remove_all("Release notes from ")) %>%
dplyr::rename(!!rlang::sym(repository_type_1L_chr) := feed_title,
Release = entry_title,
Date = entry_last_updated,
Description = entry_content,
URL = entry_link
)
if(as_kable_1L_lgl){
releases_xx <- releases_xx %>%
kableExtra::kbl() %>%
kableExtra::kable_styling()
}
return(releases_xx)
}
#releases_tb <-
# fw_repos %>%
make_release_ds()
# purrr::map_dfr(~tidyRSS::tidyfeed(paste0("https://github.com/ready4-dev/",.x,"/releases.atom"))) %>%
# dplyr::arrange(dplyr::desc(entry_last_updated))
make_release_ds <- function(brochure_repos_chr = character(0),
exclude_chr = character(0),
framework_repos_chr = character(0),
model_repos_chr = character(0),
program_repos_chr = character(0),
organisation_1L_chr = "ready4-dev",
repositories_chr = character(0),
repository_type_1L_chr = "Framework",
as_kable_1L_lgl = T){
if(identical(brochure_repos_chr,character(0))){
brochure_repos_chr <- "ready4web"
}
if(identical(exclude_chr,character(0))){
exclude_chr <- "rebuild"
}
if(identical(framework_repos_chr,character(0))){
framework_repos_chr <- c("ready4","ready4fun","ready4class","ready4pack","ready4use","ready4show")
}
if(identical(model_repos_chr,character(0))){
model_repos_chr <- c("youthvars","scorz","specific","TTU","youthu","mychoice","heterodox", "bimp")
}
if(identical(program_repos_chr,character(0))){
program_repos_chr <- setdiff(natmanager::list_repo(organisation_1L_chr),
c(brochure_repos_chr, exclude_chr, framework_repos_chr, model_repos_chr))
}
if(identical(repositories_chr,character(0))){
if(repository_type_1L_chr == "Framework"){
repositories_chr <- framework_repos_chr
}
if(repository_type_1L_chr == "Module"){
repositories_chr <- model_repos_chr
}
if(repository_type_1L_chr == "Program"){
repositories_chr <- program_repos_chr
}else{
repository_type_1L_chr <- "Package"
}
}
releases_xx <- repositories_chr %>%
purrr::map_dfr(~tidyRSS::tidyfeed(paste0("https://github.com/",organisation_1L_chr,"/",.x,"/releases.atom"))) %>%
dplyr::arrange(dplyr::desc(entry_last_updated)) %>%
dplyr::select(feed_title, entry_title, entry_last_updated, entry_content, entry_link) %>%
dplyr::mutate(feed_title = feed_title %>% stringr::str_remove_all("Release notes from ")) %>%
dplyr::rename(!!rlang::sym(repository_type_1L_chr) := feed_title,
Release = entry_title,
Date = entry_last_updated,
Description = entry_content,
URL = entry_link
)
if(as_kable_1L_lgl){
releases_xx <- releases_xx %>%
kableExtra::kbl() %>%
kableExtra::kable_styling()
}
return(releases_xx)
}
#releases_tb <- tidyRSS::tidyfeed("https://github.com/ready4-dev/ready4/releases.atom")
make_release_ds(repository_type_1L_chr = "Module")
make_release_ds <- function(repository_type_1L_chr = "Framework",
as_kable_1L_lgl = T,
brochure_repos_chr = character(0),
exclude_chr = character(0),
framework_repos_chr = character(0),
model_repos_chr = character(0),
program_repos_chr = character(0),
organisation_1L_chr = "ready4-dev",
repositories_chr = character(0)){
if(identical(brochure_repos_chr,character(0))){
brochure_repos_chr <- "ready4web"
}
if(identical(exclude_chr,character(0))){
exclude_chr <- "rebuild"
}
if(identical(framework_repos_chr,character(0))){
framework_repos_chr <- c("ready4","ready4fun","ready4class","ready4pack","ready4use","ready4show")
}
if(identical(model_repos_chr,character(0))){
model_repos_chr <- c("youthvars","scorz","specific","TTU","youthu","mychoice","heterodox", "bimp")
}
if(identical(program_repos_chr,character(0))){
program_repos_chr <- setdiff(natmanager::list_repo(organisation_1L_chr),
c(brochure_repos_chr, exclude_chr, framework_repos_chr, model_repos_chr))
}
if(identical(repositories_chr,character(0))){
if(repository_type_1L_chr == "Framework"){
repositories_chr <- framework_repos_chr
}
if(repository_type_1L_chr == "Module"){
repositories_chr <- model_repos_chr
}
if(repository_type_1L_chr == "Program"){
repositories_chr <- program_repos_chr
}else{
repository_type_1L_chr <- "Package"
}
}
releases_xx <- repositories_chr %>%
purrr::map_dfr(~tidyRSS::tidyfeed(paste0("https://github.com/",organisation_1L_chr,"/",.x,"/releases.atom"))) %>%
dplyr::arrange(dplyr::desc(entry_last_updated)) %>%
dplyr::select(feed_title, entry_title, entry_last_updated, entry_content, entry_link) %>%
dplyr::mutate(feed_title = feed_title %>% stringr::str_remove_all("Release notes from ")) %>%
dplyr::rename(!!rlang::sym(repository_type_1L_chr) := feed_title,
Release = entry_title,
Date = entry_last_updated,
Description = entry_content,
URL = entry_link
)
if(as_kable_1L_lgl){
releases_xx <- releases_xx %>%
kableExtra::kbl() %>%
kableExtra::kable_styling()
}
return(releases_xx)
}
make_release_ds("Program")
ready4::get_datasets_tb() -> ds_tb
ds_tb
ds_tb$Contents
ds_tb$Datasets_Meta
ds_tb$Datasets_Meta
ds_tb$Datasets_Meta %>% length()
ds_tb$Datasets_Meta[[1]]
ds_tb$Datasets_Meta[[1]][[1]]
ds_tb$Datasets_Meta[[1]]
ds_tb$Datasets_Meta[[1]][[1]]$fields$value
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_stop()
hugodown::hugo_start()
unlink("content/en/blog/releases/Framework_MDK_cache", recursive = TRUE)
.rs.restartR()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_start()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_start()
hugodown::hugo_start()
rlang::last_error()
rlang::last_trace()
hugodown::hugo_version()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
hugodown::hugo_start()
hugodown::hugo_stop()
