rmarkdown::render("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Getting-started/Software/Libraries/Installation/Authoring-Tools/Reporting/index.en.Rmarkdown")
rmarkdown::render("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Getting-started/Software/Libraries/Installation/Authoring-Tools/Datasets/index.en.Rmarkdown")
rmarkdown::render("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Getting-started/Software/Libraries/Installation/Authoring-Tools/Code-Development/index.en.Rmarkdown")
rmarkdown::render("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Getting-started/Software/Libraries/Installation/Modules/index.en.Rmarkdown")
blogdown::stop_server()
blogdown::serve_site()
rmarkdown::render("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Getting-started/Software/Libraries/Installation/Foundation/index.en.Rmarkdown")
rmarkdown::render("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Getting-started/Software/Libraries/Installation/Authoring-Tools/Reporting/index.en.Rmarkdown")
rmarkdown::render("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Getting-started/Software/Libraries/Installation/Authoring-Tools/Datasets/index.en.Rmarkdown")
rmarkdown::render("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Getting-started/Software/Libraries/Installation/Authoring-Tools/Code-Development/index.en.Rmarkdown")
rmarkdown::render("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Getting-started/Software/Libraries/Installation/Modules/index.en.Rmarkdown")
write_to_render_post <- function(included_dirs_chr,
path_to_main_dir_1L_chr,
is_RMD_1L_lgl = T){
included_dirs_chr %>%
purrr::walk(~{
if(is_RMD_1L_lgl){
write_blog_entries(dir_path_1L_chr = path_to_main_dir_1L_chr,
fl_nm_1L_chr = .x)
}else{
rmarkdown::render(paste0(path_to_main_dir_1L_chr,
"/",
.x,
"/index.en.Rmarkdown"))
}})
}
c("Foundation",
"Authoring-Tools/Reporting",
"Authoring-Tools/Datasets",
"Authoring-Tools/Code-Development",
"Modules") %>%
write_to_render_post("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Getting-started/Software/Libraries/Installation",
is_RMD_1L_lgl = F)
c("Module-libraries",
"Modules-and-sub-modules"
) %>%
write_to_render_post(path_to_main_dir_1L_chr = "~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Model-modules/Finding-modules")
c(#"Module-libraries",
"Modules-and-sub-modules"
) %>%
write_to_render_post(path_to_main_dir_1L_chr = "~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Model-modules/Finding-modules")
c(#"Module-libraries",
"Modules-and-sub-modules"
) %>%
write_to_render_post(path_to_main_dir_1L_chr = "~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Model-modules/Finding-modules")
c("Framework",
"Module") %>%
write_to_render_post(path_to_main_dir_1L_chr = "~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Getting-started/Software/Libraries/Types")
c("Framework_Software",
"Framework_Taxonomies",
"Spring_To_Life_Modules") %>%
write_to_render_post("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/blog/releases")
make_code_releases_tbl("Program",
as_kable_1L_lgl = T,
bootstrap_options = c("hover",
"condensed"))
bootstrap_options = c("hover",
"condensed")
repository_type_1L_chr <- "Program"
brochure_repos_chr = character(0)
exclude_chr = character(0)
format_1L_chr = "%d-%b-%Y"
framework_repos_chr = character(0)
model_repos_chr = character(0)
program_repos_chr = character(0)
organisation_1L_chr = "ready4-dev"
repositories_chr = character(0)
if(identical(brochure_repos_chr,character(0))){
brochure_repos_chr <- "ready4web"
}
if(identical(exclude_chr,character(0))){
exclude_chr <- "rebuild"
}
if(identical(framework_repos_chr,character(0))){
framework_repos_chr <- make_framework_pkgs_chr()
}
if(identical(model_repos_chr,character(0))){
model_repos_chr <- make_modules_pks_chr(what_chr = "all")
}
if(identical(program_repos_chr,character(0))){
program_repos_chr <- setdiff(natmanager::list_repo(organisation_1L_chr),
c(brochure_repos_chr, exclude_chr, framework_repos_chr, model_repos_chr))
}
if(identical(repositories_chr,character(0))){
if(repository_type_1L_chr == "Framework"){
repositories_chr <- framework_repos_chr
}
if(repository_type_1L_chr == "Module"){
repositories_chr <- model_repos_chr
}
if(repository_type_1L_chr == "Program"){
repositories_chr <- program_repos_chr
}else{
repository_type_1L_chr <- "Package"
}
}
releases_xx <- repositories_chr %>%
purrr::map_dfr(~tidyRSS::tidyfeed(paste0("https://github.com/",organisation_1L_chr,"/",.x,"/releases.atom"))) %>%
dplyr::arrange(dplyr::desc(entry_last_updated))
View(releases_xx)
releases_xx <- repositories_chr %>%
purrr::map_dfr(~tidyRSS::tidyfeed(paste0("https://github.com/",organisation_1L_chr,"/",.x,"/releases.atom"))) %>%
dplyr::arrange(dplyr::desc(entry_last_updated)) %>%
dplyr::select(feed_title, entry_title, entry_last_updated, entry_content, entry_link) %>%
dplyr::mutate(feed_title = feed_title %>% stringr::str_remove_all("Release notes from ")) %>%
dplyr::rename(!!rlang::sym(repository_type_1L_chr) := feed_title,
Release = entry_title,
Date = entry_last_updated,
Description = entry_content,
URL = entry_link
) %>%
dplyr::filter(Release != "Documentation_0.0")
releases_xx <- releases_xx %>%
dplyr::mutate(Description = Description %>% purrr::map2_chr(Program,
~ stringr::str_remove(.x,paste0(.y,": "))))
releases_xx$Program %>% unique()
program_repos_chr
make_code_releases_tbl <- function(repository_type_1L_chr = "Framework",
as_kable_1L_lgl = T,
brochure_repos_chr = character(0),
exclude_chr = character(0),
format_1L_chr = "%d-%b-%Y",
framework_repos_chr = character(0),
model_repos_chr = character(0),
program_repos_chr = character(0),
organisation_1L_chr = "ready4-dev",
repositories_chr = character(0),
subroutine_repos_chr = character(0),
...){
if(identical(brochure_repos_chr,character(0))){
brochure_repos_chr <- "ready4web"
}
if(identical(exclude_chr,character(0))){
exclude_chr <- "rebuild"
}
if(identical(framework_repos_chr,character(0))){
framework_repos_chr <- make_framework_pkgs_chr()
}
if(identical(model_repos_chr,character(0))){
model_repos_chr <- make_modules_pks_chr(what_chr = "all")
}
if(identical(subroutine_repos_chr,character(0))){
subroutine_repos_chr <- c( "ttu_mdl_ctlg","ms_tmpl")
}
if(identical(program_repos_chr,character(0))){
program_repos_chr <- setdiff(natmanager::list_repo(organisation_1L_chr),
c(brochure_repos_chr, exclude_chr, framework_repos_chr, model_repos_chr, subroutine_repos_chr))
}
if(identical(repositories_chr,character(0))){
if(repository_type_1L_chr == "Framework"){
repositories_chr <- framework_repos_chr
}
if(repository_type_1L_chr == "Module"){
repositories_chr <- model_repos_chr
}
if(repository_type_1L_chr %in% c("Program","Subroutine","Program_and_Subroutine")){
if(repository_type_1L_chr == "Subroutine"){
repositories_chr <- subroutine_repos_chr
}
if(repository_type_1L_chr == "Program"){
repositories_chr <- program_repos_chr
}
if(repository_type_1L_chr == "Program_and_Subroutine"){
repositories_chr <- c(program_repos_chr, subroutine_repos_chr)
}
}else{
repository_type_1L_chr <- "Package"
}
}
releases_xx <- repositories_chr %>%
purrr::map_dfr(~tidyRSS::tidyfeed(paste0("https://github.com/",organisation_1L_chr,"/",.x,"/releases.atom"))) %>%
dplyr::arrange(dplyr::desc(entry_last_updated)) %>%
dplyr::select(feed_title, entry_title, entry_last_updated, entry_content, entry_link) %>%
dplyr::mutate(feed_title = feed_title %>% stringr::str_remove_all("Release notes from ")) %>%
dplyr::rename(!!rlang::sym(repository_type_1L_chr) := feed_title,
Release = entry_title,
Date = entry_last_updated,
Description = entry_content,
URL = entry_link
) %>%
dplyr::filter(Release != "Documentation_0.0")
releases_xx <- releases_xx %>%
dplyr::mutate(Description = Description %>% purrr::map2_chr(Program,
~ stringr::str_remove(.x,paste0(.y,": "))))
if(as_kable_1L_lgl){
releases_xx <- releases_xx  %>%
dplyr::mutate(Release = Release %>% stringr::str_remove_all("Release ") %>%
stringr::str_remove_all("v") %>%
kableExtra::cell_spec(format = "html", link = URL),
Date = Date %>% format.Date(format_1L_chr) %>% as.character()) %>%
# dplyr::mutate(Release = cell_spec(row.names(.), "html", link = dt_url)) %>%
dplyr::select(Date, !!rlang::sym(repository_type_1L_chr), Release, Description#dplyr::everything()
)
if(repository_type_1L_chr %in% c("Package","Module","Framework")){
logos_chr <- purrr::map_chr(releases_xx %>% dplyr::pull(repository_type_1L_chr),
~paste0("https://ready4-dev.github.io/", .x, "/logo.png"))
releases_xx <- releases_xx %>%
dplyr::mutate(!!rlang::sym(repository_type_1L_chr) := "")
indx_1L_int <-which(names(releases_xx) %in% c("Package","Module","Framework"))
}
releases_xx <- releases_xx %>%
kableExtra::kable("html", escape = FALSE) %>% # kableExtra::kbl() %>%
kableExtra::kable_styling(...)   # kableExtra::kable_styling(...) %>%
if(repository_type_1L_chr %in% c("Package","Module","Framework"))
releases_xx <- releases_xx %>%
kableExtra::column_spec(indx_1L_int,
image = kableExtra::spec_image(logos_chr,
height = 160, width = 160))
}
return(releases_xx)
}
make_code_releases_tbl("Program",
as_kable_1L_lgl = T,
bootstrap_options = c("hover",
"condensed"))
make_code_releases_tbl("Program",
as_kable_1L_lgl = F,
bootstrap_options = c("hover",
"condensed")) -> releases_xx
View(releases_xx)
releases_xx %>% dplyr::group_by(Program) %>% dplyr::filter(dplyr::row_number()==1)
releases_xx %>% dplyr::group_by(Program) %>% dplyr::filter(dplyr::row_number()==1) %>% dplyr::arrange(Program) %>% dplyr::ungroup()
?`zen4R-package`
zenodo <- ZenodoManager$new()
zenodo
test_zd <- zenodo$getDepositionByConceptDOI("10.5281/zenodo.6626256")
test_zd <- zenodo$getDepositionByConceptDOI("https://doi.org/10.5281/zenodo.6626256")
test_zd <- zenodo$getDepositionByDOI("10.5281/zenodo.7252203")
library(zen4R)
test_zd <- zenodo$getDepositionByDOI("10.5281/zenodo.7252203")
my_zenodo_records <- zenodo$getDepositions()
my_zenodo_records
zenodo$getDepositions
my_zenodo_records <- zenodo$getRecords(q = "title:(open science)")
my_zenodo_records <- zenodo$getRecords(q = "communities:(ready4)")
my_zenodo_records
my_zenodo_records[[1]]
my_zenodo_records[[1]]$exportAsBibTeX()
my_zenodo_records[[1]]$title
releases_xx
zenodo_1L_chr = "ready4"
paste0("communities:(",zenodo_1L_chr,")")
zenodo_records_ls <- zenodo$getRecords(q = paste0("communities:(",zenodo_1L_chr,")"))
programs_xx<-releases_xx
source("R/Functions.R")
programs_xx <- make_code_releases_tbl(what_1L_chr,
as_kable_1L_lgl = F,
tidy_desc_1L_lgl = F) %>%
dplyr::group_by(!!rlang::sym(what_1L_chr)) %>%
dplyr::filter(dplyr::row_number()==1) %>%
dplyr::arrange(!!rlang::sym(what_1L_chr)) %>%
dplyr::ungroup()
what_1L_chr = "Program"
format_1L_chr = "%d-%b-%Y"
programs_xx <- make_code_releases_tbl(what_1L_chr,
as_kable_1L_lgl = F,
tidy_desc_1L_lgl = F) %>%
dplyr::group_by(!!rlang::sym(what_1L_chr)) %>%
dplyr::filter(dplyr::row_number()==1) %>%
dplyr::arrange(!!rlang::sym(what_1L_chr)) %>%
dplyr::ungroup()
programs_xx
View(zenodo_records_ls)
zenodo_records_ls[[1]]$title
zenodo_records_ls[[2]]$title
zenodo_records_ls[[21]]$title
zenodo_records_ls[[22]]$title
zenodo_records_ls %>% purrr::map_chr(~.x$title)
programs_xx$Description
zenodo_records_ls[[2]]
zenodo_records_ls[[22]]
zenodo_records_ls[[22]]$metadata$description
rvest::html_text(rvest::read_html(zenodo_records_ls[[22]]$metadata$description))
rvest::html_text(rvest::read_html(zenodo_records_ls[[22]]$metadata$description)) %>% stringr::str_replace_all("[\r\n]" , "")
rvest::html_text(rvest::read_html(zenodo_records_ls[[22]]$metadata$description)) %>% stringr::str_replace_all("[\r\n]" , "")
zenodo_records_ls[[22]]$metadata$description
zenodo_records_ls[[22]]$metadata$description %>% stringr::str_remove_all("&nbsp;")
rvest::html_text(rvest::read_html(zenodo_records_ls[[22]]$metadata$description %>% stringr::str_remove_all("&nbsp;"))) %>% stringr::str_replace_all("[\r\n]" , "")
zenodo_records_ls %>% purrr::map_chr(rvest::html_text(rvest::read_html(.x$metadata$description %>% stringr::str_remove_all("&nbsp;"))) %>% stringr::str_replace_all("[\r\n]" , ""))
zenodo_records_ls %>% purrr::map_chr(~rvest::html_text(rvest::read_html(.x$metadata$description %>% stringr::str_remove_all("&nbsp;"))) %>% stringr::str_replace_all("[\r\n]" , ""))
descriptions_chr <- zenodo_records_ls %>%
purrr::map_chr(~rvest::html_text(rvest::read_html(.x$metadata$description %>%
stringr::str_remove_all("&nbsp;"))) %>%
stringr::str_replace_all("[\r\n]" , ""))
setdiff(programs_xx$Description, descriptions_chr)
setdiff(descriptions_chr,programs_xx$Description)
programs_xx$Description
descriptions_chr <- zenodo_records_ls %>%
purrr::map_chr(~rvest::html_text(rvest::read_html(.x$metadata$description %>%
stringr::str_remove_all("&nbsp;"))) %>%
stringr::str_replace_all("[\r\n]" , ""))
setdiff(programs_xx$Description, descriptions_chr)
zenodo_records_ls <- zenodo$getRecords(q = paste0("communities:(",zenodo_1L_chr,")"))
descriptions_chr <- zenodo_records_ls %>%
purrr::map_chr(~rvest::html_text(rvest::read_html(.x$metadata$description %>%
stringr::str_remove_all("&nbsp;"))) %>%
stringr::str_replace_all("[\r\n]" , ""))
setdiff(programs_xx$Description, descriptions_chr)
intersect(programs_xx$Description, descriptions_chr)
include_lgl <- descriptions_chr %>% purrr::map_lgl(~.x %in% programs_xx$Description)
include_lgl
zenodo_records_ls[include_lgl]
zenodo_records_ls <- zenodo_records_ls[include_lgl]
zenodo_records_ls <- zenodo$getRecords(q = paste0("communities:(",zenodo_1L_chr,")"))
descriptions_chr <- zenodo_records_ls %>%
purrr::map_chr(~rvest::html_text(rvest::read_html(.x$metadata$description %>%
stringr::str_remove_all("&nbsp;"))) %>%
stringr::str_replace_all("[\r\n]" , ""))
indices_int <- descriptions_chr %>% purrr::map_int(~which(.x == programs_xx$Description))
zenodo_records_ls <- zenodo$getRecords(q = paste0("communities:(",zenodo_1L_chr,")"))
descriptions_chr <- zenodo_records_ls %>%
purrr::map_chr(~rvest::html_text(rvest::read_html(.x$metadata$description %>%
stringr::str_remove_all("&nbsp;"))) %>%
stringr::str_replace_all("[\r\n]" , ""))
descriptions_chr
stringr::str_replace_all("[\r\n]" , ""))
indices_int <- programs_xx$Description %>% purrr::map_int(~which(.x == descriptions_chr))
indices_int
zenodo_records_ls[[10]]
zenodo_records_ls[[10]]$links$conceptdoi
indices_int %>%
purrr::map_chr(~zenodo_records_ls[[.x]]$links$conceptdoi)
print_packages
programs_xx$DOI <- indices_int %>%
purrr::map_chr(~zenodo_records_ls[[.x]]$links$conceptdoi)
programs_xx
programs_xx$URL
gsub("\\..*","",programs_xx$URL)
gsub("/releases*","",programs_xx$URL)
gsub("/releases/*","",programs_xx$URL)
gsub("/releases/.*","",programs_xx$URL)
programs_xx$URL <- gsub("/releases/.*","",programs_xx$URL)
programs_xx
programs_xx$URL
programs_xx$Source <- gsub("/releases/.*","",programs_xx$URL)
names(programs_xx)
programs_xx$GitHub <- gsub("/releases/.*","",programs_xx$URL)
programs_xx <- programs_xx  %>%
dplyr::mutate(Release = Release %>% stringr::str_remove_all("Release ") %>%
stringr::str_remove_all("v"),
Date = Date %>% format.Date(format_1L_chr) %>% as.character()) %>%
dplyr::mutate(Source = purrr::pmap(list(GitHub, DOI),
~{
kableExtra::cell_spec(c("Dev", "Archive"),
format = "html",
link = c(..1, ..2))
}
)) %>%
dplyr::select(!!rlang::sym(what_1L_chr), Release, Date, Description, Source)
programs_xx %>%
kableExtra::kable("html", escape = FALSE) %>%
kableExtra::kable_styling(...)
programs_xx %>%
kableExtra::kable("html", escape = FALSE) %>%
kableExtra::kable_styling()
make_programs_tbl <- function(what_1L_chr = "Program",
as_kable_1L_lgl = F,
format_1L_chr = "%d-%b-%Y",
zenodo_1L_chr = "ready4",
...){
programs_xx <- make_code_releases_tbl(what_1L_chr,
as_kable_1L_lgl = F,
tidy_desc_1L_lgl = F) %>%
dplyr::group_by(!!rlang::sym(what_1L_chr)) %>%
dplyr::filter(dplyr::row_number()==1) %>%
dplyr::arrange(!!rlang::sym(what_1L_chr)) %>%
dplyr::ungroup()
zenodo_records_ls <- zenodo$getRecords(q = paste0("communities:(",zenodo_1L_chr,")"))
descriptions_chr <- zenodo_records_ls %>%
purrr::map_chr(~rvest::html_text(rvest::read_html(.x$metadata$description %>%
stringr::str_remove_all("&nbsp;"))) %>%
stringr::str_replace_all("[\r\n]" , ""))
indices_int <- programs_xx$Description %>% purrr::map_int(~which(.x == descriptions_chr))
programs_xx$DOI <- indices_int %>%
purrr::map_chr(~zenodo_records_ls[[.x]]$links$conceptdoi)
programs_xx$GitHub <- gsub("/releases/.*","",programs_xx$URL)
if(as_kable_1L_lgl){
programs_xx <- programs_xx  %>%
dplyr::mutate(Release = Release %>% stringr::str_remove_all("Release ") %>%
stringr::str_remove_all("v"),
Date = Date %>% format.Date(format_1L_chr) %>% as.character()) %>%
dplyr::mutate(Source = purrr::pmap(list(GitHub, DOI),
~{
kableExtra::cell_spec(c("Dev", "Archive"),
format = "html",
link = c(..1, ..2))
}
)) %>%
dplyr::select(!!rlang::sym(what_1L_chr), Release, Date, Description, Source)
programs_xx <- programs_xx %>%
kableExtra::kable("html", escape = FALSE) %>%
kableExtra::kable_styling(...)
}
}
make_programs_tbl(as_kable_1L_lgl = T,
bootstrap_options = c("hover",
"condensed"))
make_programs_tbl <- function(what_1L_chr = "Program",
as_kable_1L_lgl = F,
format_1L_chr = "%d-%b-%Y",
zenodo_1L_chr = "ready4",
...){
programs_xx <- make_code_releases_tbl(what_1L_chr,
as_kable_1L_lgl = F,
tidy_desc_1L_lgl = F) %>%
dplyr::group_by(!!rlang::sym(what_1L_chr)) %>%
dplyr::filter(dplyr::row_number()==1) %>%
dplyr::arrange(!!rlang::sym(what_1L_chr)) %>%
dplyr::ungroup()
zenodo_records_ls <- zenodo$getRecords(q = paste0("communities:(",zenodo_1L_chr,")"))
descriptions_chr <- zenodo_records_ls %>%
purrr::map_chr(~rvest::html_text(rvest::read_html(.x$metadata$description %>%
stringr::str_remove_all("&nbsp;"))) %>%
stringr::str_replace_all("[\r\n]" , ""))
indices_int <- programs_xx$Description %>% purrr::map_int(~which(.x == descriptions_chr))
programs_xx$DOI <- indices_int %>%
purrr::map_chr(~zenodo_records_ls[[.x]]$links$conceptdoi)
programs_xx$GitHub <- gsub("/releases/.*","",programs_xx$URL)
if(as_kable_1L_lgl){
programs_xx <- programs_xx  %>%
dplyr::mutate(Release = Release %>% stringr::str_remove_all("Release ") %>%
stringr::str_remove_all("v"),
Date = Date %>% format.Date(format_1L_chr) %>% as.character()) %>%
dplyr::mutate(Source = purrr::pmap(list(GitHub, DOI),
~{
kableExtra::cell_spec(c("Dev", "Archive"),
format = "html",
link = c(..1, ..2))
}
)) %>%
dplyr::select(!!rlang::sym(what_1L_chr), Release, Date, Description, Source)
programs_xx <- programs_xx %>%
kableExtra::kable("html", escape = FALSE) %>%
kableExtra::kable_styling(...)
}
return(programs_xx)
}
make_programs_tbl(as_kable_1L_lgl = T,
bootstrap_options = c("hover",
"condensed"))
blogdown::serve_site()
write_to_copy_rmds(dir_path_1L_chr = "~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Getting-started/Software/Programs",
fl_nm_1L_chr = "Programs",
rmds_dir_1L_chr = "R/RMD Templates/Include_HTML")
source("R/Functions.R")
c("Programs") %>%
write_to_render_post("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Getting-started/Software/Programs")
c("Programs") %>%
write_to_render_post("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Getting-started/Software/Programs")
c("Programs") %>%
write_to_render_post("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Getting-started/Software/Programs")
c("Programs") %>%
write_to_render_post("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Getting-started/Software/Programs")
c("Programs") %>%
write_to_render_post("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Getting-started/Software/Programs")
c("Programs",
"Subroutines") %>%
write_to_render_post("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Getting-started/Software/Programs")
c("Programs",
"Subroutines") %>%
write_to_render_post("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Getting-started/Software/Programs")
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
write_to_trim_html("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Analyses/Replication-Code/Make-Fakes/TEST.md")
rmarkdown::render("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Analyses/Replication-Code/Make-Fakes/Clinical-Primary.Rmd")
file.exists("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Analyses/Replication-Code/Make-Fakes/Clinical-Primary.Rmd")
file.exists("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Analyses/Replication-Code/Make-Fakes/TEST.md")
file.exists("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Analyses/Replication-Code/Make-Fakes/Clincal_Primary.Rmd")
rmarkdown::render("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Analyses/Replication-Code/Make-Fakes/Clincal_Primary.Rmd")
write_to_trim_html("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Analyses/Replication-Code/Make-Fakes/Clincal_Primary.Rmd")
write_to_trim_html("~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Analyses/Replication-Code/Make-Fakes/Clincal_Primary.md")
blogdown::stop_server()
blogdown::serve_site()
write_to_render_post("Finding-Modules",
path_to_main_dir_1L_chr = "~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Model",
is_RMD_1L_lgl = F)
write_to_render_post("Finding-Modules",
path_to_main_dir_1L_chr = "~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Model",
is_RMD_1L_lgl = F)
write_to_render_post("Finding-Modules",
path_to_main_dir_1L_chr = "~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Model",
is_RMD_1L_lgl = F)
write_to_render_post("Finding-Modules",
path_to_main_dir_1L_chr = "~/Documents/WIP/ready4/Code/Brochure/HTML/r4dev/content/en/docs/Model",
is_RMD_1L_lgl = F)
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
